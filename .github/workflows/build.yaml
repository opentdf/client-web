name: Build, Test, and Deliver Client

on:
  pull_request:
  push:
    branches:
      - main
      - release/[0-9]+.[0-9]+.[0-9]+
  release:
    types: [created]
jobs:
  lib:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './lib/package-lock.json'
      - run: npm ci
      - run: npm test
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: lib/coverage/
      - run: npm audit
      - run: npm run license-check
      - run: npm run lint
      - run: npm pack
      - uses: actions/upload-artifact@v2
        with:
          name: opentdf-client-lib
          path: ./lib/opentdf-client-*.tgz

  cli:
    needs:
      - lib
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './cli/package-lock.json'
      - uses: actions/download-artifact@v2
        with:
          name: opentdf-client-lib
      - run: npm uninstall @opentdf/client && npm ci && npm i ../opentdf-client-*.tgz
      - run: npm test
      - run: npm audit
      - run: npm run license-check
      - run: npm run lint
      - run: npm pack
      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.2.1
      - run: bats bin/opentdf.bats
      - uses: actions/upload-artifact@v2
        with:
          name: opentdf-cli
          path: ./cli/opentdf-cli-*.tgz

  sample-web-app:
    needs:
      - lib
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sample-web-app
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './sample-web-app/package-lock.json'
      - uses: actions/download-artifact@v2
        with:
          name: opentdf-client-lib
      - run: npm uninstall @opentdf/client && npm ci && npm i ../opentdf-client-*.tgz
      - run: npm install
      - run: npm test
      - run: npm audit
      - run: npm run license-check
      - run: npm run lint
      - run: npm pack

  scripts:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .github/workflows
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: mig4/setup-bats@v1
        with:
          bats-version: 1.2.1
      - name: ðŸ¦‡ðŸ¦‡ðŸ¦‡ðŸ¦‡ðŸ¦‡ðŸ¦‡
        run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" bats/bats:1.5.0 *.bats
      - name: ðŸ¦ª âœ” ðŸ§¼ðŸ§¼ðŸ§¼
        run: >-
          docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "koalaman/shellcheck:v0.8.0"
          --color=always *.sh
 
  backend-roundtrip:
    needs:
        - cli
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .github/workflows/roundtrip
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '.github/workflows/roundtrip/package-lock.json'
      - uses: actions/download-artifact@v2
        with:
          name: opentdf-client-lib
      - uses: actions/download-artifact@v2
        with:
          name: opentdf-cli
      - name: Git clone backend 
        run: |
          git clone https://github.com/opentdf/opentdf.git
      - uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: |
            kubectl
            helm
            tilt
          # This should be in sync with the minikube-deployed kube version below
          kubectl: "1.23.1"
          helm: "3.8.0"
          tilt: "0.26.2"
      - run: |
          kubectl version --client
          kustomize version
          tilt version
      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@master
        with:
          minikube-version: 1.25.1
          # This should be in sync with the setup-tools version above
          kubernetes-version: 1.23.1
      - name: Run tilt ci
        env:
          #path relative to the quickstart Tiltfile
          TEST_SCRIPT: ../../wait-and-test.sh
        run: |-
          tilt ci --file opentdf/quickstart/Tiltfile

  deliver-ghp:
    needs: [lib, cli, sample-web-app, scripts]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # To publish from a release or feature branch, remove the ref == condition below
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: https://npm.pkg.github.com
      - run: |-
          if [[ ${{ github.ref }} = refs/heads/release/* ]]; then
            scripts/check-version-is.sh "${GITHUB_REF##*release/}"
          elif [[ ${{ github.ref }} = refs/tags/v* ]]; then
            scripts/check-version-is.sh "${GITHUB_REF_NAME#v}"
          else
            scripts/check-version-is.sh
          fi
      - run: make test
      - run: make doc
      - run:
          .github/workflows/publish-to.sh $(.github/workflows/gh-semver.sh)
          $(.github/workflows/guess-dist-tag.sh)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: trigger xtest
        run: |
          curl -XPOST -u "virtru-cloudnative:${{secrets.PERSONAL_ACCESS_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" "https://api.github.com/repos/opentdf/backend/dispatches" --data '{"event_type": "xtest", "client_payload": {"version":"'$(BUILD_META="" .github/workflows/gh-semver.sh)'"}}'
      - name: 
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: lib/dist/docs

  deliver-npmjs:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: npmjs
    if: >-
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
      || (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/'))
      || (github.event_name == 'release' && startsWith(github.ref, 'refs/tags/'))
    needs: deliver-ghp
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |-
          if [[ ${{ github.ref }} = refs/heads/release/* ]]; then
            scripts/check-version-is.sh "${GITHUB_REF##*release/}"
          elif [[ ${{ github.ref }} = refs/tags/v* ]]; then
            scripts/check-version-is.sh "${GITHUB_REF_NAME#v}"
          else
            scripts/check-version-is.sh
          fi
      - run: make test
      - run:
          .github/workflows/publish-to.sh $(.github/workflows/gh-semver.sh)
          $(.github/workflows/guess-dist-tag.sh)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
