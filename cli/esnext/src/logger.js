export const Levels = ['CRITICAL', 'ERROR', 'WARNING', 'INFO', 'DEBUG', 'SILLY'];
export class CLIError extends Error {
    prefix;
    cause;
    constructor(prefix, message, cause) {
        super();
        this.prefix = prefix;
        this.message = message;
        this.cause = cause;
    }
}
export const log = Object.assign((thing, message) => {
    let e;
    let m;
    let l;
    if (thing instanceof CLIError) {
        l = thing.prefix;
        m = thing.message;
        e = thing;
    }
    else if (thing instanceof Error) {
        l = 'CRITICAL';
        m = thing.message;
        e = thing;
    }
    else {
        l = thing;
        m = message || '';
        e = new Error(m);
    }
    const i = Levels.indexOf(l);
    if (i <= Levels.indexOf(log.level)) {
        switch (l) {
            case 'CRITICAL':
            case 'ERROR':
                console.error(m, e);
                break;
            case 'WARNING':
                console.warn(m, e);
                break;
            case 'INFO':
                console.info(m);
                break;
            default:
                console.log(`[${l}] ${m}`);
                break;
        }
    }
    if (log.level === 'SILLY') {
        console.error(e);
    }
    if (l === 'CRITICAL') {
        process.exit(1);
    }
}, { level: 'INFO' });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQVksQ0FBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBRTFGLE1BQU0sT0FBTyxRQUFTLFNBQVEsS0FBSztJQUNqQyxNQUFNLENBQVE7SUFDZCxLQUFLLENBQVM7SUFDZCxZQUFZLE1BQWEsRUFBRSxPQUFlLEVBQUUsS0FBYTtRQUN2RCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7Q0FDRjtBQU9ELE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBVyxNQUFNLENBQUMsTUFBTSxDQUN0QyxDQUFDLEtBQStCLEVBQUUsT0FBZ0IsRUFBRSxFQUFFO0lBQ3BELElBQUksQ0FBUSxDQUFDO0lBQ2IsSUFBSSxDQUFTLENBQUM7SUFDZCxJQUFJLENBQVEsQ0FBQztJQUViLElBQUksS0FBSyxZQUFZLFFBQVEsRUFBRTtRQUM3QixDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUNqQixDQUFDLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUNsQixDQUFDLEdBQUcsS0FBYyxDQUFDO0tBQ3BCO1NBQU0sSUFBSSxLQUFLLFlBQVksS0FBSyxFQUFFO1FBQ2pDLENBQUMsR0FBRyxVQUFVLENBQUM7UUFDZixDQUFDLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUNsQixDQUFDLEdBQUcsS0FBYyxDQUFDO0tBQ3BCO1NBQU07UUFDTCxDQUFDLEdBQUcsS0FBYyxDQUFDO1FBQ25CLENBQUMsR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO1FBQ2xCLENBQUMsR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNsQjtJQUNELE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUIsSUFBSSxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDbEMsUUFBUSxDQUFDLEVBQUU7WUFDVCxLQUFLLFVBQVUsQ0FBQztZQUNoQixLQUFLLE9BQU87Z0JBQ1YsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLE1BQU07WUFDUixLQUFLLFNBQVM7Z0JBQ1osT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ25CLE1BQU07WUFDUixLQUFLLE1BQU07Z0JBQ1QsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEIsTUFBTTtZQUNSO2dCQUNFLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDM0IsTUFBTTtTQUNUO0tBQ0Y7SUFDRCxJQUFJLEdBQUcsQ0FBQyxLQUFLLEtBQUssT0FBTyxFQUFFO1FBQ3pCLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEI7SUFDRCxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7UUFDcEIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNqQjtBQUNILENBQUMsRUFDRCxFQUFFLEtBQUssRUFBRSxNQUFlLEVBQUUsQ0FDM0IsQ0FBQyJ9