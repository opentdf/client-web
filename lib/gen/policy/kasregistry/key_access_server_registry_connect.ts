// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file policy/kasregistry/key_access_server_registry.proto (package policy.kasregistry, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateKeyAccessServerRequest, CreateKeyAccessServerResponse, DeleteKeyAccessServerRequest, DeleteKeyAccessServerResponse, GetKeyAccessServerRequest, GetKeyAccessServerResponse, ListKeyAccessServersRequest, ListKeyAccessServersResponse, UpdateKeyAccessServerRequest, UpdateKeyAccessServerResponse } from "./key_access_server_registry_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service policy.kasregistry.KeyAccessServerRegistryService
 */
export const KeyAccessServerRegistryService = {
  typeName: "policy.kasregistry.KeyAccessServerRegistryService",
  methods: {
    /**
     * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.ListKeyAccessServers
     */
    listKeyAccessServers: {
      name: "ListKeyAccessServers",
      I: ListKeyAccessServersRequest,
      O: ListKeyAccessServersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.GetKeyAccessServer
     */
    getKeyAccessServer: {
      name: "GetKeyAccessServer",
      I: GetKeyAccessServerRequest,
      O: GetKeyAccessServerResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.CreateKeyAccessServer
     */
    createKeyAccessServer: {
      name: "CreateKeyAccessServer",
      I: CreateKeyAccessServerRequest,
      O: CreateKeyAccessServerResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.UpdateKeyAccessServer
     */
    updateKeyAccessServer: {
      name: "UpdateKeyAccessServer",
      I: UpdateKeyAccessServerRequest,
      O: UpdateKeyAccessServerResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.DeleteKeyAccessServer
     */
    deleteKeyAccessServer: {
      name: "DeleteKeyAccessServer",
      I: DeleteKeyAccessServerRequest,
      O: DeleteKeyAccessServerResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

