// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=js+dts,import_extension=none"
// @generated from file policy/namespaces/namespaces.proto (package policy.namespaces, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateNamespaceRequest, CreateNamespaceResponse, DeactivateNamespaceRequest, DeactivateNamespaceResponse, GetNamespaceRequest, GetNamespaceResponse, ListNamespacesRequest, ListNamespacesResponse, UpdateNamespaceRequest, UpdateNamespaceResponse } from "./namespaces_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service policy.namespaces.NamespaceService
 */
export declare const NamespaceService: {
  readonly typeName: "policy.namespaces.NamespaceService",
  readonly methods: {
    /**
     * @generated from rpc policy.namespaces.NamespaceService.GetNamespace
     */
    readonly getNamespace: {
      readonly name: "GetNamespace",
      readonly I: typeof GetNamespaceRequest,
      readonly O: typeof GetNamespaceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.namespaces.NamespaceService.ListNamespaces
     */
    readonly listNamespaces: {
      readonly name: "ListNamespaces",
      readonly I: typeof ListNamespacesRequest,
      readonly O: typeof ListNamespacesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.namespaces.NamespaceService.CreateNamespace
     */
    readonly createNamespace: {
      readonly name: "CreateNamespace",
      readonly I: typeof CreateNamespaceRequest,
      readonly O: typeof CreateNamespaceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.namespaces.NamespaceService.UpdateNamespace
     */
    readonly updateNamespace: {
      readonly name: "UpdateNamespace",
      readonly I: typeof UpdateNamespaceRequest,
      readonly O: typeof UpdateNamespaceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.namespaces.NamespaceService.DeactivateNamespace
     */
    readonly deactivateNamespace: {
      readonly name: "DeactivateNamespace",
      readonly I: typeof DeactivateNamespaceRequest,
      readonly O: typeof DeactivateNamespaceResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

