/**
 * @fileoverview gRPC-Web generated client stub for policy.resourcemapping
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: policy/resourcemapping/resource_mapping.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as policy_resourcemapping_resource_mapping_pb from '../../policy/resourcemapping/resource_mapping_pb'; // proto import: "policy/resourcemapping/resource_mapping.proto"


export class ResourceMappingServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListResourceMappings = new grpcWeb.MethodDescriptor(
    '/policy.resourcemapping.ResourceMappingService/ListResourceMappings',
    grpcWeb.MethodType.UNARY,
    policy_resourcemapping_resource_mapping_pb.ListResourceMappingsRequest,
    policy_resourcemapping_resource_mapping_pb.ListResourceMappingsResponse,
    (request: policy_resourcemapping_resource_mapping_pb.ListResourceMappingsRequest) => {
      return request.serializeBinary();
    },
    policy_resourcemapping_resource_mapping_pb.ListResourceMappingsResponse.deserializeBinary
  );

  listResourceMappings(
    request: policy_resourcemapping_resource_mapping_pb.ListResourceMappingsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<policy_resourcemapping_resource_mapping_pb.ListResourceMappingsResponse>;

  listResourceMappings(
    request: policy_resourcemapping_resource_mapping_pb.ListResourceMappingsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.ListResourceMappingsResponse) => void): grpcWeb.ClientReadableStream<policy_resourcemapping_resource_mapping_pb.ListResourceMappingsResponse>;

  listResourceMappings(
    request: policy_resourcemapping_resource_mapping_pb.ListResourceMappingsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.ListResourceMappingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/policy.resourcemapping.ResourceMappingService/ListResourceMappings',
        request,
        metadata || {},
        this.methodDescriptorListResourceMappings,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/policy.resourcemapping.ResourceMappingService/ListResourceMappings',
    request,
    metadata || {},
    this.methodDescriptorListResourceMappings);
  }

  methodDescriptorGetResourceMapping = new grpcWeb.MethodDescriptor(
    '/policy.resourcemapping.ResourceMappingService/GetResourceMapping',
    grpcWeb.MethodType.UNARY,
    policy_resourcemapping_resource_mapping_pb.GetResourceMappingRequest,
    policy_resourcemapping_resource_mapping_pb.GetResourceMappingResponse,
    (request: policy_resourcemapping_resource_mapping_pb.GetResourceMappingRequest) => {
      return request.serializeBinary();
    },
    policy_resourcemapping_resource_mapping_pb.GetResourceMappingResponse.deserializeBinary
  );

  getResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.GetResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null): Promise<policy_resourcemapping_resource_mapping_pb.GetResourceMappingResponse>;

  getResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.GetResourceMappingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.GetResourceMappingResponse) => void): grpcWeb.ClientReadableStream<policy_resourcemapping_resource_mapping_pb.GetResourceMappingResponse>;

  getResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.GetResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.GetResourceMappingResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/policy.resourcemapping.ResourceMappingService/GetResourceMapping',
        request,
        metadata || {},
        this.methodDescriptorGetResourceMapping,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/policy.resourcemapping.ResourceMappingService/GetResourceMapping',
    request,
    metadata || {},
    this.methodDescriptorGetResourceMapping);
  }

  methodDescriptorCreateResourceMapping = new grpcWeb.MethodDescriptor(
    '/policy.resourcemapping.ResourceMappingService/CreateResourceMapping',
    grpcWeb.MethodType.UNARY,
    policy_resourcemapping_resource_mapping_pb.CreateResourceMappingRequest,
    policy_resourcemapping_resource_mapping_pb.CreateResourceMappingResponse,
    (request: policy_resourcemapping_resource_mapping_pb.CreateResourceMappingRequest) => {
      return request.serializeBinary();
    },
    policy_resourcemapping_resource_mapping_pb.CreateResourceMappingResponse.deserializeBinary
  );

  createResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.CreateResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null): Promise<policy_resourcemapping_resource_mapping_pb.CreateResourceMappingResponse>;

  createResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.CreateResourceMappingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.CreateResourceMappingResponse) => void): grpcWeb.ClientReadableStream<policy_resourcemapping_resource_mapping_pb.CreateResourceMappingResponse>;

  createResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.CreateResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.CreateResourceMappingResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/policy.resourcemapping.ResourceMappingService/CreateResourceMapping',
        request,
        metadata || {},
        this.methodDescriptorCreateResourceMapping,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/policy.resourcemapping.ResourceMappingService/CreateResourceMapping',
    request,
    metadata || {},
    this.methodDescriptorCreateResourceMapping);
  }

  methodDescriptorUpdateResourceMapping = new grpcWeb.MethodDescriptor(
    '/policy.resourcemapping.ResourceMappingService/UpdateResourceMapping',
    grpcWeb.MethodType.UNARY,
    policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingRequest,
    policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingResponse,
    (request: policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingRequest) => {
      return request.serializeBinary();
    },
    policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingResponse.deserializeBinary
  );

  updateResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null): Promise<policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingResponse>;

  updateResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingResponse) => void): grpcWeb.ClientReadableStream<policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingResponse>;

  updateResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.UpdateResourceMappingResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/policy.resourcemapping.ResourceMappingService/UpdateResourceMapping',
        request,
        metadata || {},
        this.methodDescriptorUpdateResourceMapping,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/policy.resourcemapping.ResourceMappingService/UpdateResourceMapping',
    request,
    metadata || {},
    this.methodDescriptorUpdateResourceMapping);
  }

  methodDescriptorDeleteResourceMapping = new grpcWeb.MethodDescriptor(
    '/policy.resourcemapping.ResourceMappingService/DeleteResourceMapping',
    grpcWeb.MethodType.UNARY,
    policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingRequest,
    policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingResponse,
    (request: policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingRequest) => {
      return request.serializeBinary();
    },
    policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingResponse.deserializeBinary
  );

  deleteResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null): Promise<policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingResponse>;

  deleteResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingResponse) => void): grpcWeb.ClientReadableStream<policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingResponse>;

  deleteResourceMapping(
    request: policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: policy_resourcemapping_resource_mapping_pb.DeleteResourceMappingResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/policy.resourcemapping.ResourceMappingService/DeleteResourceMapping',
        request,
        metadata || {},
        this.methodDescriptorDeleteResourceMapping,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/policy.resourcemapping.ResourceMappingService/DeleteResourceMapping',
    request,
    metadata || {},
    this.methodDescriptorDeleteResourceMapping);
  }

}

