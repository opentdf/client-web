// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts,import_extension=none"
// @generated from file policy/attributes/attributes.proto (package policy.attributes, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ActiveStateEnum, MetadataMutable, MetadataUpdateEnum } from "../../common/common_pb";
import type { Attribute, AttributeRuleTypeEnum, Value } from "../objects_pb";
import type { AttributeValueSelector } from "../selectors_pb";

/**
 * @generated from message policy.attributes.AttributeKeyAccessServer
 */
export declare class AttributeKeyAccessServer extends Message<AttributeKeyAccessServer> {
  /**
   * @generated from field: string attribute_id = 1;
   */
  attributeId: string;

  /**
   * @generated from field: string key_access_server_id = 2;
   */
  keyAccessServerId: string;

  constructor(data?: PartialMessage<AttributeKeyAccessServer>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.AttributeKeyAccessServer";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttributeKeyAccessServer;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttributeKeyAccessServer;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttributeKeyAccessServer;

  static equals(a: AttributeKeyAccessServer | PlainMessage<AttributeKeyAccessServer> | undefined, b: AttributeKeyAccessServer | PlainMessage<AttributeKeyAccessServer> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.ValueKeyAccessServer
 */
export declare class ValueKeyAccessServer extends Message<ValueKeyAccessServer> {
  /**
   * @generated from field: string value_id = 1;
   */
  valueId: string;

  /**
   * @generated from field: string key_access_server_id = 2;
   */
  keyAccessServerId: string;

  constructor(data?: PartialMessage<ValueKeyAccessServer>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.ValueKeyAccessServer";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueKeyAccessServer;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueKeyAccessServer;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueKeyAccessServer;

  static equals(a: ValueKeyAccessServer | PlainMessage<ValueKeyAccessServer> | undefined, b: ValueKeyAccessServer | PlainMessage<ValueKeyAccessServer> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.ListAttributesRequest
 */
export declare class ListAttributesRequest extends Message<ListAttributesRequest> {
  /**
   * ACTIVE by default when not specified
   *
   * @generated from field: common.ActiveStateEnum state = 1;
   */
  state: ActiveStateEnum;

  /**
   * can be id or name
   *
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  constructor(data?: PartialMessage<ListAttributesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.ListAttributesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAttributesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAttributesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAttributesRequest;

  static equals(a: ListAttributesRequest | PlainMessage<ListAttributesRequest> | undefined, b: ListAttributesRequest | PlainMessage<ListAttributesRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.ListAttributesResponse
 */
export declare class ListAttributesResponse extends Message<ListAttributesResponse> {
  /**
   * @generated from field: repeated policy.Attribute attributes = 1;
   */
  attributes: Attribute[];

  constructor(data?: PartialMessage<ListAttributesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.ListAttributesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAttributesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAttributesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAttributesResponse;

  static equals(a: ListAttributesResponse | PlainMessage<ListAttributesResponse> | undefined, b: ListAttributesResponse | PlainMessage<ListAttributesResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.GetAttributeRequest
 */
export declare class GetAttributeRequest extends Message<GetAttributeRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetAttributeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.GetAttributeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAttributeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAttributeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAttributeRequest;

  static equals(a: GetAttributeRequest | PlainMessage<GetAttributeRequest> | undefined, b: GetAttributeRequest | PlainMessage<GetAttributeRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.GetAttributeResponse
 */
export declare class GetAttributeResponse extends Message<GetAttributeResponse> {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;

  constructor(data?: PartialMessage<GetAttributeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.GetAttributeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAttributeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAttributeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAttributeResponse;

  static equals(a: GetAttributeResponse | PlainMessage<GetAttributeResponse> | undefined, b: GetAttributeResponse | PlainMessage<GetAttributeResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.CreateAttributeRequest
 */
export declare class CreateAttributeRequest extends Message<CreateAttributeRequest> {
  /**
   * Required
   *
   * @generated from field: string namespace_id = 1;
   */
  namespaceId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: policy.AttributeRuleTypeEnum rule = 3;
   */
  rule: AttributeRuleTypeEnum;

  /**
   * Optional attribute values (when provided) must be alphanumeric strings, allowing hyphens and underscores but not as the first or last character.
   * The stored attribute value will be normalized to lower case.
   *
   * @generated from field: repeated string values = 4;
   */
  values: string[];

  /**
   * Optional
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  constructor(data?: PartialMessage<CreateAttributeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.CreateAttributeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAttributeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAttributeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAttributeRequest;

  static equals(a: CreateAttributeRequest | PlainMessage<CreateAttributeRequest> | undefined, b: CreateAttributeRequest | PlainMessage<CreateAttributeRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.CreateAttributeResponse
 */
export declare class CreateAttributeResponse extends Message<CreateAttributeResponse> {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;

  constructor(data?: PartialMessage<CreateAttributeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.CreateAttributeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAttributeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAttributeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAttributeResponse;

  static equals(a: CreateAttributeResponse | PlainMessage<CreateAttributeResponse> | undefined, b: CreateAttributeResponse | PlainMessage<CreateAttributeResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.UpdateAttributeRequest
 */
export declare class UpdateAttributeRequest extends Message<UpdateAttributeRequest> {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  /**
   * @generated from field: common.MetadataUpdateEnum metadata_update_behavior = 101;
   */
  metadataUpdateBehavior: MetadataUpdateEnum;

  constructor(data?: PartialMessage<UpdateAttributeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.UpdateAttributeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAttributeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAttributeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAttributeRequest;

  static equals(a: UpdateAttributeRequest | PlainMessage<UpdateAttributeRequest> | undefined, b: UpdateAttributeRequest | PlainMessage<UpdateAttributeRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.UpdateAttributeResponse
 */
export declare class UpdateAttributeResponse extends Message<UpdateAttributeResponse> {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;

  constructor(data?: PartialMessage<UpdateAttributeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.UpdateAttributeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAttributeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAttributeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAttributeResponse;

  static equals(a: UpdateAttributeResponse | PlainMessage<UpdateAttributeResponse> | undefined, b: UpdateAttributeResponse | PlainMessage<UpdateAttributeResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.DeactivateAttributeRequest
 */
export declare class DeactivateAttributeRequest extends Message<DeactivateAttributeRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeactivateAttributeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.DeactivateAttributeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateAttributeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateAttributeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateAttributeRequest;

  static equals(a: DeactivateAttributeRequest | PlainMessage<DeactivateAttributeRequest> | undefined, b: DeactivateAttributeRequest | PlainMessage<DeactivateAttributeRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.DeactivateAttributeResponse
 */
export declare class DeactivateAttributeResponse extends Message<DeactivateAttributeResponse> {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;

  constructor(data?: PartialMessage<DeactivateAttributeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.DeactivateAttributeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateAttributeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateAttributeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateAttributeResponse;

  static equals(a: DeactivateAttributeResponse | PlainMessage<DeactivateAttributeResponse> | undefined, b: DeactivateAttributeResponse | PlainMessage<DeactivateAttributeResponse> | undefined): boolean;
}

/**
 * /
 * / Value RPC messages
 * /
 *
 * @generated from message policy.attributes.GetAttributeValueRequest
 */
export declare class GetAttributeValueRequest extends Message<GetAttributeValueRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetAttributeValueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.GetAttributeValueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAttributeValueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAttributeValueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAttributeValueRequest;

  static equals(a: GetAttributeValueRequest | PlainMessage<GetAttributeValueRequest> | undefined, b: GetAttributeValueRequest | PlainMessage<GetAttributeValueRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.GetAttributeValueResponse
 */
export declare class GetAttributeValueResponse extends Message<GetAttributeValueResponse> {
  /**
   * @generated from field: policy.Value value = 1;
   */
  value?: Value;

  constructor(data?: PartialMessage<GetAttributeValueResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.GetAttributeValueResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAttributeValueResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAttributeValueResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAttributeValueResponse;

  static equals(a: GetAttributeValueResponse | PlainMessage<GetAttributeValueResponse> | undefined, b: GetAttributeValueResponse | PlainMessage<GetAttributeValueResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.ListAttributeValuesRequest
 */
export declare class ListAttributeValuesRequest extends Message<ListAttributeValuesRequest> {
  /**
   * @generated from field: string attribute_id = 1;
   */
  attributeId: string;

  /**
   * ACTIVE by default when not specified
   *
   * @generated from field: common.ActiveStateEnum state = 2;
   */
  state: ActiveStateEnum;

  constructor(data?: PartialMessage<ListAttributeValuesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.ListAttributeValuesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAttributeValuesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAttributeValuesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAttributeValuesRequest;

  static equals(a: ListAttributeValuesRequest | PlainMessage<ListAttributeValuesRequest> | undefined, b: ListAttributeValuesRequest | PlainMessage<ListAttributeValuesRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.ListAttributeValuesResponse
 */
export declare class ListAttributeValuesResponse extends Message<ListAttributeValuesResponse> {
  /**
   * @generated from field: repeated policy.Value values = 1;
   */
  values: Value[];

  constructor(data?: PartialMessage<ListAttributeValuesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.ListAttributeValuesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAttributeValuesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAttributeValuesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAttributeValuesResponse;

  static equals(a: ListAttributeValuesResponse | PlainMessage<ListAttributeValuesResponse> | undefined, b: ListAttributeValuesResponse | PlainMessage<ListAttributeValuesResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.CreateAttributeValueRequest
 */
export declare class CreateAttributeValueRequest extends Message<CreateAttributeValueRequest> {
  /**
   * Required
   *
   * @generated from field: string attribute_id = 1;
   */
  attributeId: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * Optional
   *
   * @generated from field: repeated string members = 3;
   */
  members: string[];

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  constructor(data?: PartialMessage<CreateAttributeValueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.CreateAttributeValueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAttributeValueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAttributeValueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAttributeValueRequest;

  static equals(a: CreateAttributeValueRequest | PlainMessage<CreateAttributeValueRequest> | undefined, b: CreateAttributeValueRequest | PlainMessage<CreateAttributeValueRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.CreateAttributeValueResponse
 */
export declare class CreateAttributeValueResponse extends Message<CreateAttributeValueResponse> {
  /**
   * @generated from field: policy.Value value = 1;
   */
  value?: Value;

  constructor(data?: PartialMessage<CreateAttributeValueResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.CreateAttributeValueResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAttributeValueResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAttributeValueResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAttributeValueResponse;

  static equals(a: CreateAttributeValueResponse | PlainMessage<CreateAttributeValueResponse> | undefined, b: CreateAttributeValueResponse | PlainMessage<CreateAttributeValueResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.UpdateAttributeValueRequest
 */
export declare class UpdateAttributeValueRequest extends Message<UpdateAttributeValueRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional
   *
   * @generated from field: repeated string members = 4;
   */
  members: string[];

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  /**
   * @generated from field: common.MetadataUpdateEnum metadata_update_behavior = 101;
   */
  metadataUpdateBehavior: MetadataUpdateEnum;

  constructor(data?: PartialMessage<UpdateAttributeValueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.UpdateAttributeValueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAttributeValueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAttributeValueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAttributeValueRequest;

  static equals(a: UpdateAttributeValueRequest | PlainMessage<UpdateAttributeValueRequest> | undefined, b: UpdateAttributeValueRequest | PlainMessage<UpdateAttributeValueRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.UpdateAttributeValueResponse
 */
export declare class UpdateAttributeValueResponse extends Message<UpdateAttributeValueResponse> {
  /**
   * @generated from field: policy.Value value = 1;
   */
  value?: Value;

  constructor(data?: PartialMessage<UpdateAttributeValueResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.UpdateAttributeValueResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAttributeValueResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAttributeValueResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAttributeValueResponse;

  static equals(a: UpdateAttributeValueResponse | PlainMessage<UpdateAttributeValueResponse> | undefined, b: UpdateAttributeValueResponse | PlainMessage<UpdateAttributeValueResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.DeactivateAttributeValueRequest
 */
export declare class DeactivateAttributeValueRequest extends Message<DeactivateAttributeValueRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeactivateAttributeValueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.DeactivateAttributeValueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateAttributeValueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateAttributeValueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateAttributeValueRequest;

  static equals(a: DeactivateAttributeValueRequest | PlainMessage<DeactivateAttributeValueRequest> | undefined, b: DeactivateAttributeValueRequest | PlainMessage<DeactivateAttributeValueRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.DeactivateAttributeValueResponse
 */
export declare class DeactivateAttributeValueResponse extends Message<DeactivateAttributeValueResponse> {
  /**
   * @generated from field: policy.Value value = 1;
   */
  value?: Value;

  constructor(data?: PartialMessage<DeactivateAttributeValueResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.DeactivateAttributeValueResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeactivateAttributeValueResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeactivateAttributeValueResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeactivateAttributeValueResponse;

  static equals(a: DeactivateAttributeValueResponse | PlainMessage<DeactivateAttributeValueResponse> | undefined, b: DeactivateAttributeValueResponse | PlainMessage<DeactivateAttributeValueResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.GetAttributeValuesByFqnsRequest
 */
export declare class GetAttributeValuesByFqnsRequest extends Message<GetAttributeValuesByFqnsRequest> {
  /**
   * Required
   * Fully Qualified Names of attribute values (i.e. https://<namespace>/attr/<attribute_name>/value/<value_name>), normalized to lower case.
   *
   * @generated from field: repeated string fqns = 1;
   */
  fqns: string[];

  /**
   * @generated from field: policy.AttributeValueSelector with_value = 2;
   */
  withValue?: AttributeValueSelector;

  constructor(data?: PartialMessage<GetAttributeValuesByFqnsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.GetAttributeValuesByFqnsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAttributeValuesByFqnsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAttributeValuesByFqnsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAttributeValuesByFqnsRequest;

  static equals(a: GetAttributeValuesByFqnsRequest | PlainMessage<GetAttributeValuesByFqnsRequest> | undefined, b: GetAttributeValuesByFqnsRequest | PlainMessage<GetAttributeValuesByFqnsRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.GetAttributeValuesByFqnsResponse
 */
export declare class GetAttributeValuesByFqnsResponse extends Message<GetAttributeValuesByFqnsResponse> {
  /**
   * map of FQNs to complete attributes and the one selected value
   *
   * @generated from field: map<string, policy.attributes.GetAttributeValuesByFqnsResponse.AttributeAndValue> fqn_attribute_values = 1;
   */
  fqnAttributeValues: { [key: string]: GetAttributeValuesByFqnsResponse_AttributeAndValue };

  constructor(data?: PartialMessage<GetAttributeValuesByFqnsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.GetAttributeValuesByFqnsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAttributeValuesByFqnsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAttributeValuesByFqnsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAttributeValuesByFqnsResponse;

  static equals(a: GetAttributeValuesByFqnsResponse | PlainMessage<GetAttributeValuesByFqnsResponse> | undefined, b: GetAttributeValuesByFqnsResponse | PlainMessage<GetAttributeValuesByFqnsResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.GetAttributeValuesByFqnsResponse.AttributeAndValue
 */
export declare class GetAttributeValuesByFqnsResponse_AttributeAndValue extends Message<GetAttributeValuesByFqnsResponse_AttributeAndValue> {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;

  /**
   * @generated from field: policy.Value value = 2;
   */
  value?: Value;

  constructor(data?: PartialMessage<GetAttributeValuesByFqnsResponse_AttributeAndValue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.GetAttributeValuesByFqnsResponse.AttributeAndValue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAttributeValuesByFqnsResponse_AttributeAndValue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAttributeValuesByFqnsResponse_AttributeAndValue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAttributeValuesByFqnsResponse_AttributeAndValue;

  static equals(a: GetAttributeValuesByFqnsResponse_AttributeAndValue | PlainMessage<GetAttributeValuesByFqnsResponse_AttributeAndValue> | undefined, b: GetAttributeValuesByFqnsResponse_AttributeAndValue | PlainMessage<GetAttributeValuesByFqnsResponse_AttributeAndValue> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.AssignKeyAccessServerToAttributeRequest
 */
export declare class AssignKeyAccessServerToAttributeRequest extends Message<AssignKeyAccessServerToAttributeRequest> {
  /**
   * @generated from field: policy.attributes.AttributeKeyAccessServer attribute_key_access_server = 1;
   */
  attributeKeyAccessServer?: AttributeKeyAccessServer;

  constructor(data?: PartialMessage<AssignKeyAccessServerToAttributeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.AssignKeyAccessServerToAttributeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignKeyAccessServerToAttributeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToAttributeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToAttributeRequest;

  static equals(a: AssignKeyAccessServerToAttributeRequest | PlainMessage<AssignKeyAccessServerToAttributeRequest> | undefined, b: AssignKeyAccessServerToAttributeRequest | PlainMessage<AssignKeyAccessServerToAttributeRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.AssignKeyAccessServerToAttributeResponse
 */
export declare class AssignKeyAccessServerToAttributeResponse extends Message<AssignKeyAccessServerToAttributeResponse> {
  /**
   * @generated from field: policy.attributes.AttributeKeyAccessServer attribute_key_access_server = 1;
   */
  attributeKeyAccessServer?: AttributeKeyAccessServer;

  constructor(data?: PartialMessage<AssignKeyAccessServerToAttributeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.AssignKeyAccessServerToAttributeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignKeyAccessServerToAttributeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToAttributeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToAttributeResponse;

  static equals(a: AssignKeyAccessServerToAttributeResponse | PlainMessage<AssignKeyAccessServerToAttributeResponse> | undefined, b: AssignKeyAccessServerToAttributeResponse | PlainMessage<AssignKeyAccessServerToAttributeResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.RemoveKeyAccessServerFromAttributeRequest
 */
export declare class RemoveKeyAccessServerFromAttributeRequest extends Message<RemoveKeyAccessServerFromAttributeRequest> {
  /**
   * @generated from field: policy.attributes.AttributeKeyAccessServer attribute_key_access_server = 1;
   */
  attributeKeyAccessServer?: AttributeKeyAccessServer;

  constructor(data?: PartialMessage<RemoveKeyAccessServerFromAttributeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.RemoveKeyAccessServerFromAttributeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveKeyAccessServerFromAttributeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromAttributeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromAttributeRequest;

  static equals(a: RemoveKeyAccessServerFromAttributeRequest | PlainMessage<RemoveKeyAccessServerFromAttributeRequest> | undefined, b: RemoveKeyAccessServerFromAttributeRequest | PlainMessage<RemoveKeyAccessServerFromAttributeRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.RemoveKeyAccessServerFromAttributeResponse
 */
export declare class RemoveKeyAccessServerFromAttributeResponse extends Message<RemoveKeyAccessServerFromAttributeResponse> {
  /**
   * @generated from field: policy.attributes.AttributeKeyAccessServer attribute_key_access_server = 1;
   */
  attributeKeyAccessServer?: AttributeKeyAccessServer;

  constructor(data?: PartialMessage<RemoveKeyAccessServerFromAttributeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.RemoveKeyAccessServerFromAttributeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveKeyAccessServerFromAttributeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromAttributeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromAttributeResponse;

  static equals(a: RemoveKeyAccessServerFromAttributeResponse | PlainMessage<RemoveKeyAccessServerFromAttributeResponse> | undefined, b: RemoveKeyAccessServerFromAttributeResponse | PlainMessage<RemoveKeyAccessServerFromAttributeResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.AssignKeyAccessServerToValueRequest
 */
export declare class AssignKeyAccessServerToValueRequest extends Message<AssignKeyAccessServerToValueRequest> {
  /**
   * @generated from field: policy.attributes.ValueKeyAccessServer value_key_access_server = 1;
   */
  valueKeyAccessServer?: ValueKeyAccessServer;

  constructor(data?: PartialMessage<AssignKeyAccessServerToValueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.AssignKeyAccessServerToValueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignKeyAccessServerToValueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToValueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToValueRequest;

  static equals(a: AssignKeyAccessServerToValueRequest | PlainMessage<AssignKeyAccessServerToValueRequest> | undefined, b: AssignKeyAccessServerToValueRequest | PlainMessage<AssignKeyAccessServerToValueRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.AssignKeyAccessServerToValueResponse
 */
export declare class AssignKeyAccessServerToValueResponse extends Message<AssignKeyAccessServerToValueResponse> {
  /**
   * @generated from field: policy.attributes.ValueKeyAccessServer value_key_access_server = 1;
   */
  valueKeyAccessServer?: ValueKeyAccessServer;

  constructor(data?: PartialMessage<AssignKeyAccessServerToValueResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.AssignKeyAccessServerToValueResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignKeyAccessServerToValueResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToValueResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignKeyAccessServerToValueResponse;

  static equals(a: AssignKeyAccessServerToValueResponse | PlainMessage<AssignKeyAccessServerToValueResponse> | undefined, b: AssignKeyAccessServerToValueResponse | PlainMessage<AssignKeyAccessServerToValueResponse> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.RemoveKeyAccessServerFromValueRequest
 */
export declare class RemoveKeyAccessServerFromValueRequest extends Message<RemoveKeyAccessServerFromValueRequest> {
  /**
   * @generated from field: policy.attributes.ValueKeyAccessServer value_key_access_server = 1;
   */
  valueKeyAccessServer?: ValueKeyAccessServer;

  constructor(data?: PartialMessage<RemoveKeyAccessServerFromValueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.RemoveKeyAccessServerFromValueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveKeyAccessServerFromValueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromValueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromValueRequest;

  static equals(a: RemoveKeyAccessServerFromValueRequest | PlainMessage<RemoveKeyAccessServerFromValueRequest> | undefined, b: RemoveKeyAccessServerFromValueRequest | PlainMessage<RemoveKeyAccessServerFromValueRequest> | undefined): boolean;
}

/**
 * @generated from message policy.attributes.RemoveKeyAccessServerFromValueResponse
 */
export declare class RemoveKeyAccessServerFromValueResponse extends Message<RemoveKeyAccessServerFromValueResponse> {
  /**
   * @generated from field: policy.attributes.ValueKeyAccessServer value_key_access_server = 1;
   */
  valueKeyAccessServer?: ValueKeyAccessServer;

  constructor(data?: PartialMessage<RemoveKeyAccessServerFromValueResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.attributes.RemoveKeyAccessServerFromValueResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveKeyAccessServerFromValueResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromValueResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveKeyAccessServerFromValueResponse;

  static equals(a: RemoveKeyAccessServerFromValueResponse | PlainMessage<RemoveKeyAccessServerFromValueResponse> | undefined, b: RemoveKeyAccessServerFromValueResponse | PlainMessage<RemoveKeyAccessServerFromValueResponse> | undefined): boolean;
}

