// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=js+dts,import_extension=none"
// @generated from file policy/attributes/attributes.proto (package policy.attributes, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AssignKeyAccessServerToAttributeRequest, AssignKeyAccessServerToAttributeResponse, AssignKeyAccessServerToValueRequest, AssignKeyAccessServerToValueResponse, CreateAttributeRequest, CreateAttributeResponse, CreateAttributeValueRequest, CreateAttributeValueResponse, DeactivateAttributeRequest, DeactivateAttributeResponse, DeactivateAttributeValueRequest, DeactivateAttributeValueResponse, GetAttributeRequest, GetAttributeResponse, GetAttributeValueRequest, GetAttributeValueResponse, GetAttributeValuesByFqnsRequest, GetAttributeValuesByFqnsResponse, ListAttributesRequest, ListAttributesResponse, ListAttributeValuesRequest, ListAttributeValuesResponse, RemoveKeyAccessServerFromAttributeRequest, RemoveKeyAccessServerFromAttributeResponse, RemoveKeyAccessServerFromValueRequest, RemoveKeyAccessServerFromValueResponse, UpdateAttributeRequest, UpdateAttributeResponse, UpdateAttributeValueRequest, UpdateAttributeValueResponse } from "./attributes_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * /
 * / Attribute Service
 * /
 *
 * @generated from service policy.attributes.AttributesService
 */
export declare const AttributesService: {
  readonly typeName: "policy.attributes.AttributesService",
  readonly methods: {
    /**
     * --------------------------------------*
     * Attribute RPCs
     * ---------------------------------------
     *
     * @generated from rpc policy.attributes.AttributesService.ListAttributes
     */
    readonly listAttributes: {
      readonly name: "ListAttributes",
      readonly I: typeof ListAttributesRequest,
      readonly O: typeof ListAttributesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.ListAttributeValues
     */
    readonly listAttributeValues: {
      readonly name: "ListAttributeValues",
      readonly I: typeof ListAttributeValuesRequest,
      readonly O: typeof ListAttributeValuesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.GetAttribute
     */
    readonly getAttribute: {
      readonly name: "GetAttribute",
      readonly I: typeof GetAttributeRequest,
      readonly O: typeof GetAttributeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.GetAttributeValuesByFqns
     */
    readonly getAttributeValuesByFqns: {
      readonly name: "GetAttributeValuesByFqns",
      readonly I: typeof GetAttributeValuesByFqnsRequest,
      readonly O: typeof GetAttributeValuesByFqnsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.CreateAttribute
     */
    readonly createAttribute: {
      readonly name: "CreateAttribute",
      readonly I: typeof CreateAttributeRequest,
      readonly O: typeof CreateAttributeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.UpdateAttribute
     */
    readonly updateAttribute: {
      readonly name: "UpdateAttribute",
      readonly I: typeof UpdateAttributeRequest,
      readonly O: typeof UpdateAttributeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.DeactivateAttribute
     */
    readonly deactivateAttribute: {
      readonly name: "DeactivateAttribute",
      readonly I: typeof DeactivateAttributeRequest,
      readonly O: typeof DeactivateAttributeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * --------------------------------------*
     * Value RPCs
     * ---------------------------------------
     *
     * @generated from rpc policy.attributes.AttributesService.GetAttributeValue
     */
    readonly getAttributeValue: {
      readonly name: "GetAttributeValue",
      readonly I: typeof GetAttributeValueRequest,
      readonly O: typeof GetAttributeValueResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.CreateAttributeValue
     */
    readonly createAttributeValue: {
      readonly name: "CreateAttributeValue",
      readonly I: typeof CreateAttributeValueRequest,
      readonly O: typeof CreateAttributeValueResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.UpdateAttributeValue
     */
    readonly updateAttributeValue: {
      readonly name: "UpdateAttributeValue",
      readonly I: typeof UpdateAttributeValueRequest,
      readonly O: typeof UpdateAttributeValueResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.DeactivateAttributeValue
     */
    readonly deactivateAttributeValue: {
      readonly name: "DeactivateAttributeValue",
      readonly I: typeof DeactivateAttributeValueRequest,
      readonly O: typeof DeactivateAttributeValueResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * --------------------------------------*
     * Attribute <> Key Access Server RPCs
     * ---------------------------------------
     *
     * @generated from rpc policy.attributes.AttributesService.AssignKeyAccessServerToAttribute
     */
    readonly assignKeyAccessServerToAttribute: {
      readonly name: "AssignKeyAccessServerToAttribute",
      readonly I: typeof AssignKeyAccessServerToAttributeRequest,
      readonly O: typeof AssignKeyAccessServerToAttributeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.RemoveKeyAccessServerFromAttribute
     */
    readonly removeKeyAccessServerFromAttribute: {
      readonly name: "RemoveKeyAccessServerFromAttribute",
      readonly I: typeof RemoveKeyAccessServerFromAttributeRequest,
      readonly O: typeof RemoveKeyAccessServerFromAttributeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.AssignKeyAccessServerToValue
     */
    readonly assignKeyAccessServerToValue: {
      readonly name: "AssignKeyAccessServerToValue",
      readonly I: typeof AssignKeyAccessServerToValueRequest,
      readonly O: typeof AssignKeyAccessServerToValueResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc policy.attributes.AttributesService.RemoveKeyAccessServerFromValue
     */
    readonly removeKeyAccessServerFromValue: {
      readonly name: "RemoveKeyAccessServerFromValue",
      readonly I: typeof RemoveKeyAccessServerFromValueRequest,
      readonly O: typeof RemoveKeyAccessServerFromValueResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

