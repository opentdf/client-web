// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts,import_extension=none"
// @generated from file policy/kasregistry/key_access_server_registry.proto (package policy.kasregistry, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { KeyAccessServer, PublicKey } from "../objects_pb";
import type { MetadataMutable, MetadataUpdateEnum } from "../../common/common_pb";

/**
 * @generated from message policy.kasregistry.GetKeyAccessServerRequest
 */
export declare class GetKeyAccessServerRequest extends Message<GetKeyAccessServerRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetKeyAccessServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.GetKeyAccessServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyAccessServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyAccessServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyAccessServerRequest;

  static equals(a: GetKeyAccessServerRequest | PlainMessage<GetKeyAccessServerRequest> | undefined, b: GetKeyAccessServerRequest | PlainMessage<GetKeyAccessServerRequest> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.GetKeyAccessServerResponse
 */
export declare class GetKeyAccessServerResponse extends Message<GetKeyAccessServerResponse> {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;

  constructor(data?: PartialMessage<GetKeyAccessServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.GetKeyAccessServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyAccessServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyAccessServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyAccessServerResponse;

  static equals(a: GetKeyAccessServerResponse | PlainMessage<GetKeyAccessServerResponse> | undefined, b: GetKeyAccessServerResponse | PlainMessage<GetKeyAccessServerResponse> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.ListKeyAccessServersRequest
 */
export declare class ListKeyAccessServersRequest extends Message<ListKeyAccessServersRequest> {
  constructor(data?: PartialMessage<ListKeyAccessServersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.ListKeyAccessServersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyAccessServersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyAccessServersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyAccessServersRequest;

  static equals(a: ListKeyAccessServersRequest | PlainMessage<ListKeyAccessServersRequest> | undefined, b: ListKeyAccessServersRequest | PlainMessage<ListKeyAccessServersRequest> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.ListKeyAccessServersResponse
 */
export declare class ListKeyAccessServersResponse extends Message<ListKeyAccessServersResponse> {
  /**
   * @generated from field: repeated policy.KeyAccessServer key_access_servers = 1;
   */
  keyAccessServers: KeyAccessServer[];

  constructor(data?: PartialMessage<ListKeyAccessServersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.ListKeyAccessServersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyAccessServersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyAccessServersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyAccessServersResponse;

  static equals(a: ListKeyAccessServersResponse | PlainMessage<ListKeyAccessServersResponse> | undefined, b: ListKeyAccessServersResponse | PlainMessage<ListKeyAccessServersResponse> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.CreateKeyAccessServerRequest
 */
export declare class CreateKeyAccessServerRequest extends Message<CreateKeyAccessServerRequest> {
  /**
   * Required
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * @generated from field: policy.PublicKey public_key = 2;
   */
  publicKey?: PublicKey;

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  constructor(data?: PartialMessage<CreateKeyAccessServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.CreateKeyAccessServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateKeyAccessServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateKeyAccessServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateKeyAccessServerRequest;

  static equals(a: CreateKeyAccessServerRequest | PlainMessage<CreateKeyAccessServerRequest> | undefined, b: CreateKeyAccessServerRequest | PlainMessage<CreateKeyAccessServerRequest> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.CreateKeyAccessServerResponse
 */
export declare class CreateKeyAccessServerResponse extends Message<CreateKeyAccessServerResponse> {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;

  constructor(data?: PartialMessage<CreateKeyAccessServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.CreateKeyAccessServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateKeyAccessServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateKeyAccessServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateKeyAccessServerResponse;

  static equals(a: CreateKeyAccessServerResponse | PlainMessage<CreateKeyAccessServerResponse> | undefined, b: CreateKeyAccessServerResponse | PlainMessage<CreateKeyAccessServerResponse> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.UpdateKeyAccessServerRequest
 */
export declare class UpdateKeyAccessServerRequest extends Message<UpdateKeyAccessServerRequest> {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * @generated from field: policy.PublicKey public_key = 3;
   */
  publicKey?: PublicKey;

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  /**
   * @generated from field: common.MetadataUpdateEnum metadata_update_behavior = 101;
   */
  metadataUpdateBehavior: MetadataUpdateEnum;

  constructor(data?: PartialMessage<UpdateKeyAccessServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.UpdateKeyAccessServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateKeyAccessServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateKeyAccessServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateKeyAccessServerRequest;

  static equals(a: UpdateKeyAccessServerRequest | PlainMessage<UpdateKeyAccessServerRequest> | undefined, b: UpdateKeyAccessServerRequest | PlainMessage<UpdateKeyAccessServerRequest> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.UpdateKeyAccessServerResponse
 */
export declare class UpdateKeyAccessServerResponse extends Message<UpdateKeyAccessServerResponse> {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;

  constructor(data?: PartialMessage<UpdateKeyAccessServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.UpdateKeyAccessServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateKeyAccessServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateKeyAccessServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateKeyAccessServerResponse;

  static equals(a: UpdateKeyAccessServerResponse | PlainMessage<UpdateKeyAccessServerResponse> | undefined, b: UpdateKeyAccessServerResponse | PlainMessage<UpdateKeyAccessServerResponse> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.DeleteKeyAccessServerRequest
 */
export declare class DeleteKeyAccessServerRequest extends Message<DeleteKeyAccessServerRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteKeyAccessServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.DeleteKeyAccessServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteKeyAccessServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteKeyAccessServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteKeyAccessServerRequest;

  static equals(a: DeleteKeyAccessServerRequest | PlainMessage<DeleteKeyAccessServerRequest> | undefined, b: DeleteKeyAccessServerRequest | PlainMessage<DeleteKeyAccessServerRequest> | undefined): boolean;
}

/**
 * @generated from message policy.kasregistry.DeleteKeyAccessServerResponse
 */
export declare class DeleteKeyAccessServerResponse extends Message<DeleteKeyAccessServerResponse> {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;

  constructor(data?: PartialMessage<DeleteKeyAccessServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "policy.kasregistry.DeleteKeyAccessServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteKeyAccessServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteKeyAccessServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteKeyAccessServerResponse;

  static equals(a: DeleteKeyAccessServerResponse | PlainMessage<DeleteKeyAccessServerResponse> | undefined, b: DeleteKeyAccessServerResponse | PlainMessage<DeleteKeyAccessServerResponse> | undefined): boolean;
}

