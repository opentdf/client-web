// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=js+dts,import_extension=none"
// @generated from file kas/kas.proto (package kas, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { InfoRequest, InfoResponse, LegacyPublicKeyRequest, PublicKeyRequest, PublicKeyResponse, RewrapRequest, RewrapResponse } from "./kas_pb";
import { MethodKind, StringValue } from "@bufbuild/protobuf";

/**
 * Get app info from the root path
 *
 * @generated from service kas.AccessService
 */
export declare const AccessService: {
  readonly typeName: "kas.AccessService",
  readonly methods: {
    /**
     * Get the current version of the service
     *
     * @generated from rpc kas.AccessService.Info
     */
    readonly info: {
      readonly name: "Info",
      readonly I: typeof InfoRequest,
      readonly O: typeof InfoResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kas.AccessService.PublicKey
     */
    readonly publicKey: {
      readonly name: "PublicKey",
      readonly I: typeof PublicKeyRequest,
      readonly O: typeof PublicKeyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from rpc kas.AccessService.LegacyPublicKey
     */
    readonly legacyPublicKey: {
      readonly name: "LegacyPublicKey",
      readonly I: typeof LegacyPublicKeyRequest,
      readonly O: typeof StringValue,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kas.AccessService.Rewrap
     */
    readonly rewrap: {
      readonly name: "Rewrap",
      readonly I: typeof RewrapRequest,
      readonly O: typeof RewrapResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

